import 'dart:ui';
import 'package:flokemon/core/utils/size_utils.dart';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.lime20001,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.indigo700,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();

  void changeTheme(String s) {}
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.black90001,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.black90001,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.black90001,
          fontSize: 11.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.gray9003a,
          fontSize: 40.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.redA70001,
          fontSize: 35.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 24.fSize,
          fontFamily: 'Anonymous Pro',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.indigo700,
          fontSize: 13.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.indigo700,
          fontSize: 11.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.black90001,
          fontSize: 20.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 16.fSize,
          fontFamily: 'Asap',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amberA700 => Color(0XFFF8A70A);

  // Black
  Color get black900 => Color(0XFF0B0A0A);
  Color get black90001 => Color(0XFF000000);

  // BlueGray
  Color get blueGray200 => Color(0XFF9FC9CC);
  Color get blueGray400 => Color(0XFF86859E);
  Color get blueGray40001 => Color(0XFF86869E);
  Color get blueGray900 => Color(0XFF27214D);

  // BlueGrayF
  Color get blueGray200F9 => Color(0XF9A0C9CC);

  // DeepOrange
  Color get deepOrange700 => Color(0XFFE2591E);

  // Gray
  Color get gray100 => Color(0XFFF3F4F9);
  Color get gray900 => Color(0XFF231F20);
  Color get gray90001 => Color(0XFF0D131A);
  Color get gray90002 => Color(0XFF070648);

  // Grayc
  Color get gray9000c => Color(0X0C202020);

  // Graya
  Color get gray9003a => Color(0X3A1E1E1E);

  // Indigo
  Color get indigo300 => Color(0XFF6BA6D1);
  Color get indigo700 => Color(0XFF2D4890);
  Color get indigo900 => Color(0XFF211981);

  // LightBlue
  Color get lightBlue100 => Color(0XFFB2E3FF);

  // Lime
  Color get lime200 => Color(0XFFF0E9A5);
  Color get lime20001 => Color(0XFFE1DE95);
  Color get lime20002 => Color(0XFFE9E69D);

  // Red
  Color get red400 => Color(0XFFD65252);
  Color get red900 => Color(0XFF7F0B0B);
  Color get redA700 => Color(0XFFFF0000);
  Color get redA70001 => Color(0XFFC00101);

  // RedF
  Color get red400F9 => Color(0XF9D55151);

  // RedBb
  Color get red900Bb => Color(0XBB880000);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow500 => Color(0XFFFBFF23);

  // YellowF
  Color get yellow500F9 => Color(0XF9FAFF23);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
